{"ast":null,"code":"import NoteView from \"./NoteView.vue\";\nexport default {\n  name: 'NotesContainer',\n  props: {},\n  components: {\n    NoteView\n  },\n  data() {\n    return {\n      notes: []\n    };\n  },\n  methods: {\n    updateNote(id, newContents) {\n      this.notes = this.notes.map(item => item.id == id ? {\n        ...item,\n        contents: newContents\n      } : item);\n    },\n    deleteNote(id) {\n      if (confirm(\"Are you sure you want to delete this note?\")) {\n        this.notes = this.notes.filter(item => item.id != id);\n      }\n    },\n    addNote(time, newContents) {\n      this.notes = [...this.notes, {\n        id: this.notes.length,\n        timestamp: time,\n        contents: newContents\n      }];\n    },\n    copyToClipboard() {\n      navigator.clipboard.writeText(this.getNotes());\n    },\n    downloadNotes() {\n      let element = document.createElement('a');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(this.getNotes()));\n      element.setAttribute('download', \"notes.txt\");\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    },\n    getNotes() {\n      return this.notes.map(item => item.timestamp + \": \" + item.contents).join(\"\\n\");\n    }\n  }\n};","map":{"version":3,"mappings":"AAWA,OAAOA,QAAO,MAAO,gBAAe;AAEpC,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE,CACP,CAAC;EACDC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE;IAET;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,CAACC,EAAE,EAAEC,WAAW,EAAE;MAC1B,IAAI,CAACJ,KAAI,GAAI,IAAI,CAACA,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAC,IAAKA,EAAC,GAAI;QAAC,GAAGG,IAAI;QAAEC,QAAQ,EAAEH;MAAW,IAAIE,IAAI,CAAC;IAChG,CAAC;IACDE,UAAU,CAACL,EAAE,EAAE;MACb,IAAIM,OAAO,CAAC,4CAA4C,CAAC,EAAE;QACzD,IAAI,CAACT,KAAI,GAAI,IAAI,CAACA,KAAK,CAACU,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACH,EAAC,IAAKA,EAAE,CAAC;MACzD;IACF,CAAC;IACDQ,OAAO,CAACC,IAAI,EAAER,WAAW,EAAE;MACzB,IAAI,CAACJ,KAAI,GAAI,CAAC,GAAG,IAAI,CAACA,KAAK,EAAE;QAACG,EAAE,EAAE,IAAI,CAACH,KAAK,CAACa,MAAM;QAAEC,SAAS,EAAEF,IAAI;QAAEL,QAAQ,EAAEH;MAAW,CAAC,CAAC;IAC/F,CAAC;IACDW,eAAe,GAAG;MAChBC,SAAS,CAACC,SAAS,CAACC,SAAS,CAAC,IAAI,CAACC,QAAQ,EAAE,CAAC;IAChD,CAAC;IACDC,aAAa,GAAG;MACd,IAAIC,OAAM,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACzCF,OAAO,CAACG,YAAY,CAAC,MAAM,EAAE,gCAA+B,GAAIC,kBAAkB,CAAC,IAAI,CAACN,QAAQ,EAAE,CAAC,CAAC;MACpGE,OAAO,CAACG,YAAY,CAAC,UAAU,EAAE,WAAW,CAAC;MAE7CH,OAAO,CAACK,KAAK,CAACC,OAAM,GAAI,MAAM;MAC9BL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,OAAO,CAAC;MAElCA,OAAO,CAACS,KAAK,EAAE;MAEfR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,OAAO,CAAC;IACpC,CAAC;IACDF,QAAQ,GAAG;MACT,OAAO,IAAI,CAACnB,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACQ,SAAQ,GAAI,IAAG,GAAIR,IAAI,CAACC,QAAQ,CAAC,CAACyB,IAAI,CAAC,IAAI,CAAC;IACnF;EACF;AACF","names":["NoteView","name","props","components","data","notes","methods","updateNote","id","newContents","map","item","contents","deleteNote","confirm","filter","addNote","time","length","timestamp","copyToClipboard","navigator","clipboard","writeText","getNotes","downloadNotes","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","join"],"sourceRoot":"","sources":["H:\\Alex\\Website\\Vue\\notey\\src\\components\\NotesContainer.vue"],"sourcesContent":["<template>\r\n  <div id=\"logs-container\" class=\"row mt-4 flex-grow-1\">\r\n    <div class=\"card h-100\">\r\n      <ul id=\"logs\" class=\"list-group\">\r\n        <NoteView v-for=\"note of this.notes\" :key=\"note.id\" :note=\"note\" @update-note=\"updateNote\" @delete-note=\"deleteNote\"></NoteView>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NoteView from \"./NoteView.vue\"\r\n\r\nexport default {\r\n  name: 'NotesContainer',\r\n  props: {\r\n  },\r\n  components: {\r\n    NoteView,\r\n  },\r\n  data() {\r\n    return {\r\n      notes: [\r\n      ],\r\n    }\r\n  },\r\n  methods: {\r\n    updateNote(id, newContents) {\r\n      this.notes = this.notes.map((item) => item.id == id ? {...item, contents: newContents} : item);\r\n    },\r\n    deleteNote(id) {\r\n      if (confirm(\"Are you sure you want to delete this note?\")) {\r\n        this.notes = this.notes.filter((item) => item.id != id);\r\n      }\r\n    },\r\n    addNote(time, newContents) {\r\n      this.notes = [...this.notes, {id: this.notes.length, timestamp: time, contents: newContents}];\r\n    },\r\n    copyToClipboard() {\r\n      navigator.clipboard.writeText(this.getNotes());\r\n    },\r\n    downloadNotes() {\r\n      let element = document.createElement('a');\r\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(this.getNotes()));\r\n      element.setAttribute('download', \"notes.txt\");\r\n\r\n      element.style.display = 'none';\r\n      document.body.appendChild(element);\r\n\r\n      element.click();\r\n\r\n      document.body.removeChild(element);\r\n    },\r\n    getNotes() {\r\n      return this.notes.map((item) => item.timestamp + \": \" + item.contents).join(\"\\n\");\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nli:nth-child(odd) {\r\n  background: #F4FAFF;\r\n}\r\n\r\n#logs-container {\r\n  overflow-y: scroll;\r\n  height: 100%;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}