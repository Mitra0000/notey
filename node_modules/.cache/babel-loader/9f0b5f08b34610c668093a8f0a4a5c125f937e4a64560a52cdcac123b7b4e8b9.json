{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bf095620\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"center-block\"\n};\nconst _hoisted_2 = {\n  class: \"card h-100\"\n};\nconst _hoisted_3 = {\n  id: \"logs\",\n  class: \"list-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NoteView = _resolveComponent(\"NoteView\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.notes, note => {\n    return _openBlock(), _createBlock(_component_NoteView, {\n      key: note.id,\n      note: note,\n      onUpdateNote: $options.updateNote,\n      onDeleteNote: $options.deleteNote\n    }, null, 8 /* PROPS */, [\"note\", \"onUpdateNote\", \"onDeleteNote\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n    class: \"btn\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.addNote())\n  }, \"Add\")]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAY;;EACjBC,EAAE,EAAC,MAAM;EAACD,KAAK,EAAC;;;;uBAFxBE,oBAOM,OAPNC,UAOM,GANJC,oBAIM,OAJNC,UAIM,GAHJD,oBAEK,MAFLE,UAEK,sBADHJ,oBAAgIK,kCAAlGC,KAAK,EAAlBC,IAAI;yBAArBC,aAAgIC;MAA1FC,GAAG,EAAEH,IAAI,CAACR,EAAE;MAAGQ,IAAI,EAAEA,IAAI;MAAGI,YAAW,EAAEC,mBAAU;MAAGC,YAAW,EAAED;;sCAG7GV,oBAAmD;IAA3CJ,KAAK,EAAC,KAAK;IAAEgB,OAAK,sCAAEF,gBAAO;KAAI,KAAG","names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","notes","note","_createBlock","_component_NoteView","key","onUpdateNote","$options","onDeleteNote","onClick"],"sourceRoot":"","sources":["H:\\Alex\\Website\\Vue\\notey\\src\\components\\NotesContainer.vue"],"sourcesContent":["<template>\r\n  <div class=\"center-block\">\r\n    <div class=\"card h-100\">\r\n      <ul id=\"logs\" class=\"list-group\">\r\n        <NoteView v-for=\"note of this.notes\" :key=\"note.id\" :note=\"note\" @update-note=\"updateNote\" @delete-note=\"deleteNote\"></NoteView>\r\n      </ul>\r\n    </div>\r\n    <button class=\"btn\" @click=\"addNote()\">Add</button>\r\n  </div>\r\n  </template>\r\n\r\n<script>\r\nimport NoteView from \"./NoteView.vue\"\r\n\r\nexport default {\r\n  name: 'NotesContainer',\r\n  props: {\r\n  },\r\n  components: {\r\n    NoteView,\r\n  },\r\n  data() {\r\n    return {\r\n      notes: [\r\n        {\r\n          id: 0,\r\n          timestamp: \"12:34\",\r\n          contents: \"Hello World\",\r\n        },\r\n        {\r\n          id: 1,\r\n          timestamp: \"12:35\",\r\n          contents: \"Goodbye World\",\r\n        }\r\n      ],\r\n    }\r\n  },\r\n  methods: {\r\n    updateNote(id, newContents) {\r\n      this.notes = this.notes.map((item) => item.id == id ? {...item, contents: newContents} : item);\r\n    },\r\n    deleteNote(id) {\r\n      if (confirm(\"Are you sure you want to delete this note?\")) {\r\n        this.notes = this.notes.filter((item) => item.id != id);\r\n      }\r\n    },\r\n    addNote() {\r\n      this.notes = [...this.notes, {id: this.notes.length, timestamp: \"34:34\", contents: \"New note\"}];\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nul:nth-child(odd) {\r\n  background: #F4FAFF;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}