{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withKeys as _withKeys, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fe90fb32\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_2 = {\n  class: \"d-flex\",\n  style: {\n    \"align-items\": \"baseline\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"no-grow time\"\n};\nconst _hoisted_4 = [\"value\", \"disabled\"];\nconst _hoisted_5 = {\n  class: \"no-grow\"\n};\nconst _hoisted_6 = {\n  class: \"btn-group-sm\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-trash\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_8 = [_hoisted_7];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"li\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString(this.note.timestamp), 1 /* TEXT */), _createElementVNode(\"input\", {\n    id: \"content\",\n    ref: \"note-content\",\n    value: this.note.contents,\n    disabled: !$data.editing_mode,\n    onKeyup: _cache[0] || (_cache[0] = _withKeys((...args) => $options.saveContents && $options.saveContents(...args), [\"enter\"])),\n    onBlur: _cache[1] || (_cache[1] = (...args) => $options.saveContents && $options.saveContents(...args)),\n    autocomplete: \"off\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    class: \"btn\",\n    onClick: _cache[2] || (_cache[2] = $event => $data.editing_mode ? $options.saveContents() : $options.editContents())\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass(['bi', $data.editing_mode ? 'bi-check-lg' : 'bi-pencil'])\n  }, null, 2 /* CLASS */)]), _createElementVNode(\"button\", {\n    class: \"btn\",\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.$emit('delete-note', $props.note.id))\n  }, _hoisted_8)])])])]);\n}","map":{"version":3,"mappings":";;;EACMA,KAAK,EAAC;AAAiB;;EACpBA,KAAK,EAAC,QAAQ;EAACC,KAA4B,EAA5B;IAAA;EAAA;;;EACbD,KAAK,EAAC;AAAc;;;EASpBA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAc;gEAKrBE,oBAA2B;EAAxBF,KAAK,EAAC;AAAa;oBAAtBG,UAA2B;;uBAjBrCC,oBAsBK,MAtBLC,UAsBK,GArBHH,oBAoBM,OApBNI,UAoBM,GAnBJJ,oBAAyD,OAAzDK,UAAyD,wBAAvBC,IAAI,CAACC,SAAS,kBAChDP,oBAOwB;IANpBQ,EAAE,EAAC,SAAS;IACZC,GAAG,EAAC,cAAc;IACjBC,KAAK,OAAOJ,IAAI,CAACK,QAAQ;IACzBC,QAAQ,GAAGC,kBAAY;IACnBC,OAAK,mDAAQC,uDAAY;IACzBC,MAAI,yCAAED,uDAAY;IACvBE,YAAY,EAAC;wDACjBjB,oBASM,OATNkB,UASM,GARJlB,oBAOM,OAPNmB,UAOM,GANJnB,oBAES;IAFDF,KAAK,EAAC,KAAK;IAAEsB,OAAK,sCAAEP,kBAAY,GAAEE,qBAAY,KAAKA,qBAAY;MACrEf,oBAAmE;IAA/DF,KAAK,yBAASe,kBAAY;6BAEhCb,oBAES;IAFDF,KAAK,EAAC,KAAK;IAAEsB,OAAK,sCAAEC,UAAK,gBAAgBC,WAAI,CAACd,EAAE","names":["class","style","_createElementVNode","_hoisted_7","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","note","timestamp","id","ref","value","contents","disabled","$data","onKeyup","$options","onBlur","autocomplete","_hoisted_5","_hoisted_6","onClick","_ctx","$props"],"sourceRoot":"","sources":["H:\\Alex\\Website\\Vue\\notey\\src\\components\\NoteView.vue"],"sourcesContent":["<template>\r\n  <li class=\"list-group-item\">\r\n    <div class=\"d-flex\" style=\"align-items:baseline\">\r\n      <div class=\"no-grow time\">{{ this.note.timestamp }}</div>\r\n      <input \r\n          id=\"content\" \r\n          ref=\"note-content\" \r\n          :value=\"this.note.contents\" \r\n          :disabled=\"!editing_mode\" \r\n          v-on:keyup.enter=\"saveContents\"\r\n          v-on:blur=\"saveContents\"\r\n          autocomplete=\"off\" >\r\n      <div class=\"no-grow\">\r\n        <div class=\"btn-group-sm\">\r\n          <button class=\"btn\" @click=\"editing_mode? saveContents() : editContents()\">\r\n            <i :class=\"['bi', editing_mode ? 'bi-check-lg' : 'bi-pencil']\"></i>\r\n          </button>\r\n          <button class=\"btn\" @click=\"$emit('delete-note', note.id)\">\r\n            <i class=\"bi bi-trash\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </li>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'NoteView',\r\n  props: {\r\n    note: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      editing_mode: false,\r\n    }\r\n  },\r\n  methods: {\r\n    editContents() {\r\n      this.editing_mode = true;\r\n      this.$refs[\"note-content\"].setAttribute(\"disabled\", \"false\");\r\n      this.$nextTick(() => this.$refs[\"note-content\"].focus());\r\n    },\r\n    saveContents() {\r\n      this.editing_mode = false;\r\n      this.$refs[\"note-content\"].setAttribute(\"disabled\", \"true\");\r\n      this.$emit(\"update-note\", this.note.id, this.$refs[\"note-content\"].value);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.time {\r\n  border-right: 2px solid #4F4F4F;\r\n  padding-right: 1rem;\r\n}\r\n#content {\r\n  flex-grow: 1;\r\n  padding-left: 1rem;\r\n}\r\ninput {\r\n  background-color: initial!important;\r\n  color: initial;\r\n  border-color: initial;\r\n  border-style: initial;\r\n}\r\n</style>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}