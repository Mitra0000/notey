{"ast":null,"code":"import NoteView from \"./NoteView.vue\";\nexport default {\n  name: 'NotesContainer',\n  props: {},\n  components: {\n    NoteView\n  },\n  data() {\n    return {\n      notes: [{\n        id: 0,\n        timestamp: \"12:34\",\n        contents: \"Hello World\"\n      }, {\n        id: 1,\n        timestamp: \"12:35\",\n        contents: \"Goodbye World\"\n      }]\n    };\n  },\n  methods: {\n    updateNote(id, newContents) {\n      this.notes = this.notes.map(item => item.id == id ? {\n        ...item,\n        contents: newContents\n      } : item);\n      console.log(this.notes);\n    },\n    deleteNote(id) {\n      if (confirm(\"Are you sure you want to delete this note?\")) {\n        this.notes = this.notes.filter(item => item.id != id);\n      }\n    },\n    addNote(newContents) {\n      this.notes = [...this.notes, {\n        id: this.notes.length,\n        timestamp: \"34:34\",\n        contents: newContents\n      }];\n    }\n  }\n};","map":{"version":3,"mappings":"AAaA,OAAOA,QAAO,MAAO,gBAAe;AAEpC,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE,CACP,CAAC;EACDC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,CACL;QACEC,EAAE,EAAE,CAAC;QACLC,SAAS,EAAE,OAAO;QAClBC,QAAQ,EAAE;MACZ,CAAC,EACD;QACEF,EAAE,EAAE,CAAC;QACLC,SAAS,EAAE,OAAO;QAClBC,QAAQ,EAAE;MACZ;IAEJ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,CAACJ,EAAE,EAAEK,WAAW,EAAE;MAC1B,IAAI,CAACN,KAAI,GAAI,IAAI,CAACA,KAAK,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACP,EAAC,IAAKA,EAAC,GAAI;QAAC,GAAGO,IAAI;QAAEL,QAAQ,EAAEG;MAAW,IAAIE,IAAI,CAAC;MAC9FC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,KAAK,CAAC;IACzB,CAAC;IACDW,UAAU,CAACV,EAAE,EAAE;MACb,IAAIW,OAAO,CAAC,4CAA4C,CAAC,EAAE;QACzD,IAAI,CAACZ,KAAI,GAAI,IAAI,CAACA,KAAK,CAACa,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACP,EAAC,IAAKA,EAAE,CAAC;MACzD;IACF,CAAC;IACDa,OAAO,CAACR,WAAW,EAAE;MACnB,IAAI,CAACN,KAAI,GAAI,CAAC,GAAG,IAAI,CAACA,KAAK,EAAE;QAACC,EAAE,EAAE,IAAI,CAACD,KAAK,CAACe,MAAM;QAAEb,SAAS,EAAE,OAAO;QAAEC,QAAQ,EAAEG;MAAW,CAAC,CAAC;IAClG;EACF;AACF","names":["NoteView","name","props","components","data","notes","id","timestamp","contents","methods","updateNote","newContents","map","item","console","log","deleteNote","confirm","filter","addNote","length"],"sourceRoot":"","sources":["H:\\Alex\\Website\\Vue\\notey\\src\\components\\NotesContainer.vue"],"sourcesContent":["<template>\r\n  <div id=\"logs-container\" class=\"row mt-4 flex-grow-1\">\r\n    <div class=\"col-lg center-block\">\r\n      <div class=\"card h-100\">\r\n        <ul id=\"logs\" class=\"list-group\">\r\n          <NoteView v-for=\"note of this.notes\" :key=\"note.id\" :note=\"note\" @update-note=\"updateNote\" @delete-note=\"deleteNote\"></NoteView>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NoteView from \"./NoteView.vue\"\r\n\r\nexport default {\r\n  name: 'NotesContainer',\r\n  props: {\r\n  },\r\n  components: {\r\n    NoteView,\r\n  },\r\n  data() {\r\n    return {\r\n      notes: [\r\n        {\r\n          id: 0,\r\n          timestamp: \"12:34\",\r\n          contents: \"Hello World\",\r\n        },\r\n        {\r\n          id: 1,\r\n          timestamp: \"12:35\",\r\n          contents: \"Goodbye World\",\r\n        }\r\n      ],\r\n    }\r\n  },\r\n  methods: {\r\n    updateNote(id, newContents) {\r\n      this.notes = this.notes.map((item) => item.id == id ? {...item, contents: newContents} : item);\r\n      console.log(this.notes);\r\n    },\r\n    deleteNote(id) {\r\n      if (confirm(\"Are you sure you want to delete this note?\")) {\r\n        this.notes = this.notes.filter((item) => item.id != id);\r\n      }\r\n    },\r\n    addNote(newContents) {\r\n      this.notes = [...this.notes, {id: this.notes.length, timestamp: \"34:34\", contents: newContents}];\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nli:nth-child(odd) {\r\n  background: #F4FAFF;\r\n}\r\n\r\n#logs-container {\r\n  overflow-y: scroll;\r\n  height: 75vh;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}