{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2421e420\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mt-4 mb-4 h-100\",\n  style: {\n    \"flex-grow\": \"1\",\n    \"overflow-y\": \"scroll\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"card\",\n  style: {\n    \"height\": \"100%\"\n  }\n};\nconst _hoisted_3 = {\n  id: \"logs\",\n  class: \"list-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NoteView = _resolveComponent(\"NoteView\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.notes, note => {\n    return _openBlock(), _createBlock(_component_NoteView, {\n      key: note.id,\n      note: note,\n      onUpdateNote: $options.updateNote,\n      onDeleteNote: $options.deleteNote\n    }, null, 8, [\"note\", \"onUpdateNote\", \"onDeleteNote\"]);\n  }), 128))])])]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC,iBAAiB;EAACC,KAAyC,EAAzC;IAAA;IAAA;EAAA;;;EACtBD,KAAK,EAAC,MAAM;EAACC,KAAqB,EAArB;IAAA;EAAA;;;EACZC,EAAE,EAAC,MAAM;EAACF,KAAK,EAAC;;;;uBAFxBG,oBAMM,OANNC,UAMM,GALJC,oBAIM,OAJNC,UAIM,GAHJD,oBAEK,MAFLE,UAEK,sBADHJ,oBAAgIK,kCAAlGC,KAAK,EAAlBC,IAAI;yBAArBC,aAAgIC;MAA1FC,GAAG,EAAEH,IAAI,CAACR,EAAE;MAAGQ,IAAI,EAAEA,IAAI;MAAGI,YAAW,EAAEC,mBAAU;MAAGC,YAAW,EAAED","names":["class","style","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","notes","note","_createBlock","_component_NoteView","key","onUpdateNote","$options","onDeleteNote"],"sourceRoot":"","sources":["H:\\Alex\\Website\\Vue\\notey\\src\\components\\NotesContainer.vue"],"sourcesContent":["<template>\r\n  <div class=\"mt-4 mb-4 h-100\" style=\"flex-grow: 1; overflow-y: scroll;\">\r\n    <div class=\"card\" style=\"height: 100%;\">\r\n      <ul id=\"logs\" class=\"list-group\">\r\n        <NoteView v-for=\"note of this.notes\" :key=\"note.id\" :note=\"note\" @update-note=\"updateNote\" @delete-note=\"deleteNote\"></NoteView>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NoteView from \"./NoteView.vue\"\r\n\r\nexport default {\r\n  name: 'NotesContainer',\r\n  props: {\r\n  },\r\n  components: {\r\n    NoteView,\r\n  },\r\n  data() {\r\n    return {\r\n      notes: [\r\n      ],\r\n    }\r\n  },\r\n  methods: {\r\n    updateNote(id, newContents) {\r\n      this.notes = this.notes.map((item) => item.id == id ? {...item, contents: newContents} : item);\r\n    },\r\n    deleteNote(id) {\r\n      if (confirm(\"Are you sure you want to delete this note?\")) {\r\n        this.notes = this.notes.filter((item) => item.id != id);\r\n      }\r\n    },\r\n    addNote(time, newContents) {\r\n      this.notes = [...this.notes, {id: this.notes.length, timestamp: time, contents: newContents}];\r\n    },\r\n    copyToClipboard() {\r\n      navigator.clipboard.writeText(this.getNotes());\r\n    },\r\n    downloadNotes() {\r\n      let element = document.createElement('a');\r\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(this.getNotes()));\r\n      element.setAttribute('download', \"notes.txt\");\r\n\r\n      element.style.display = 'none';\r\n      document.body.appendChild(element);\r\n\r\n      element.click();\r\n\r\n      document.body.removeChild(element);\r\n    },\r\n    getNotes() {\r\n      return this.notes.map((item) => item.timestamp + \": \" + item.contents).join(\"\\n\");\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nli:nth-child(odd) {\r\n  background: #F4FAFF;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}