{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"parent\",\n  class: \"d-flex\",\n  style: {\n    \"flex-direction\": \"column\",\n    \"height\": \"100vh\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"container d-flex\",\n  style: {\n    \"flex-direction\": \"column\",\n    \"flex-grow\": \"1\",\n    \"overflow-y\": \"hidden\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderComponent = _resolveComponent(\"HeaderComponent\");\n  const _component_TimerComponent = _resolveComponent(\"TimerComponent\");\n  const _component_NotesContainer = _resolveComponent(\"NotesContainer\");\n  const _component_AddNote = _resolveComponent(\"AddNote\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_HeaderComponent), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_TimerComponent, {\n    ref: \"timer-component\",\n    onCopyToClipboard: _cache[0] || (_cache[0] = $event => $options.copyNotes()),\n    onDownloadNotes: _cache[1] || (_cache[1] = $event => $options.downloadNotes())\n  }, null, 512 /* NEED_PATCH */), _createVNode(_component_NotesContainer, {\n    ref: \"notes-container\"\n  }, null, 512 /* NEED_PATCH */)]), _createVNode(_component_AddNote, {\n    onAddNote: $options.createNote\n  }, null, 8 /* PROPS */, [\"onAddNote\"])], 512 /* NEED_PATCH */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAEOA,GAAG,EAAC,QAAQ;EAACC,KAAK,EAAC,QAAQ;EAACC,KAA8C,EAA9C;IAAA;IAAA;EAAA;;;EAC1BD,KAAK,EAAC,kBAAkB;EAACC,KAAgE,EAAhE;IAAA;IAAA;IAAA;EAAA;;;;;;;6DAFhCC,aAAmCC,6BACnCC,oBAMM,OANNC,UAMM,GALJD,oBAGM,OAHNE,UAGM,GAFJJ,aAA0HK;IAA1GR,GAAG,EAAC,iBAAiB;IAAES,iBAAiB,sCAAEC,kBAAS;IAAKC,eAAc,sCAAED,sBAAa;kCACrGP,aAAuDS;IAAvCZ,GAAG,EAAC;EAAiB,kCAEvCG,aAA0CU;IAAhCC,SAAQ,EAAEJ;EAAU","names":["ref","class","style","_createVNode","_component_HeaderComponent","_createElementVNode","_hoisted_1","_hoisted_2","_component_TimerComponent","onCopyToClipboard","$options","onDownloadNotes","_component_NotesContainer","_component_AddNote","onAddNote"],"sourceRoot":"","sources":["H:\\Alex\\Website\\Vue\\notey\\src\\App.vue"],"sourcesContent":["<template>\r\n  <HeaderComponent></HeaderComponent>\r\n  <div ref=\"parent\" class=\"d-flex\" style=\"flex-direction: column; height: 100vh;\">\r\n    <div class=\"container d-flex\" style=\"flex-direction: column; flex-grow: 1; overflow-y: hidden\">\r\n      <TimerComponent ref=\"timer-component\" @copy-to-clipboard=\"copyNotes()\" @download-notes=\"downloadNotes()\"></TimerComponent>\r\n      <NotesContainer ref=\"notes-container\"></NotesContainer>\r\n    </div>\r\n    <AddNote @add-note=\"createNote\"></AddNote>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AddNote from \"./components/AddNote.vue\"\r\nimport HeaderComponent from \"./components/HeaderComponent.vue\"\r\nimport NotesContainer from \"./components/NotesContainer.vue\"\r\nimport TimerComponent from \"./components/TimerComponent.vue\"\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    AddNote,\r\n    HeaderComponent,\r\n    NotesContainer,\r\n    TimerComponent,\r\n  },\r\n  methods: {\r\n    createNote(contents) {\r\n      if (contents.trim() == \"\") {\r\n        return;\r\n      }\r\n      this.$refs[\"notes-container\"].addNote(this.$refs[\"timer-component\"].getTime(), this.sanitise(contents));\r\n      this.$refs[\"timer-component\"].startTimer();\r\n    },\r\n    copyNotes() {\r\n      this.$refs[\"notes-container\"].copyToClipboard();\r\n    },\r\n    downloadNotes() {\r\n      this.$refs[\"notes-container\"].downloadNotes();\r\n    },\r\n    sanitise(text) {\r\n      let words = text.split(\" \");\r\n      // TODO: Find a way to distinguish between her (possessive) and her (referential).\r\n      for (let i = 0; i < words.length; i++) {\r\n        let word = words[i].toLowerCase();\r\n        if (word == \"he\" || word == \"him\" || word == \"she\" || word == \"her\" || word == \"they\") {\r\n          words[i] = \"TC\";\r\n        } else if (word == \"his\" || word == \"their\") {\r\n          words[i] = \"TC's\";\r\n        }\r\n      }\r\n      return words.join(\" \");\r\n    },\r\n  },\r\n  mounted() {\r\n    window.addEventListener(\"resize\", () => {this.$refs[\"parent\"].style.height = window.innerHeight + \"px\";});\r\n    this.$refs[\"parent\"].style.height = window.innerHeight + \"px\";\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n.no-grow {\r\n  flex-grow: 0;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}