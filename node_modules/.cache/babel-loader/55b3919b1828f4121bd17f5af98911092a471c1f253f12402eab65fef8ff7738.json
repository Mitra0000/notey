{"ast":null,"code":"export default {\n  name: \"TimerComponent\",\n  data() {\n    return {\n      time: 0,\n      incrementTimer: {},\n      isRunning: false\n    };\n  },\n  methods: {\n    startTimer() {\n      this.incrementTimer = setInterval(function () {\n        this.time = this.time + 1;\n        this.$refs[\"timer\"].textContent = String(Math.floor(this.time / 60)).padStart(2, \"0\") + \":\" + String(this.time % 60).padStart(2, \"0\");\n      }, 1000);\n    },\n    pauseTimer() {\n      this.isRunning = false;\n      clearInterval(this.incrementTimer);\n    },\n    resetTimer() {\n      this.time = 0;\n      this.$refs[\"timer\"].textContent = \"00:00\";\n    }\n  }\n};","map":{"version":3,"mappings":"AA2BA,eAAe;EACbA,IAAI,EAAE,gBAAgB;EACtBC,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC;MACPC,cAAc,EAAE,CAAC,CAAC;MAClBC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,GAAG;MACX,IAAI,CAACH,cAAa,GAAII,WAAW,CAAC,YAAW;QAC3C,IAAI,CAACL,IAAG,GAAI,IAAI,CAACA,IAAG,GAAI,CAAC;QACzB,IAAI,CAACM,KAAK,CAAC,OAAO,CAAC,CAACC,WAAU,GAAIC,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACV,IAAG,GAAI,EAAE,CAAC,CAAC,CAACW,QAAQ,CAAC,CAAC,EAAE,GAAG,IAAI,GAAE,GAAIH,MAAM,CAAC,IAAI,CAACR,IAAG,GAAI,EAAE,CAAC,CAACW,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MACvI,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IACDC,UAAU,GAAG;MACX,IAAI,CAACV,SAAQ,GAAI,KAAK;MACtBW,aAAa,CAAC,IAAI,CAACZ,cAAc,CAAC;IACpC,CAAC;IACDa,UAAU,GAAG;MACX,IAAI,CAACd,IAAG,GAAI,CAAC;MACb,IAAI,CAACM,KAAK,CAAC,OAAO,CAAC,CAACC,WAAU,GAAI,OAAO;IAC3C;EACF;AACF","names":["name","data","time","incrementTimer","isRunning","methods","startTimer","setInterval","$refs","textContent","String","Math","floor","padStart","pauseTimer","clearInterval","resetTimer"],"sourceRoot":"","sources":["H:\\Alex\\Website\\Vue\\notey\\src\\components\\TimerComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"row mt-4\" style=\"text-align: center;\">\r\n      <h1 class=\"display-1\" ref=\"timer\">{{ time }}</h1>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-lg d-flex\" style=\"align-items: baseline;\">\r\n      <div class=\"no-grow\">\r\n        <button class=\"btn btn-light rounded\">\r\n          <i class=\"bi bi-download\"></i>\r\n        </button>\r\n      </div>\r\n      <div class=\"btn-group-lg d-flex\" style=\"flex-grow: 1; justify-content: center;\">\r\n        <button class=\"btn btn-primary\" onClick=\"startTimer()\">Start</button>\r\n        <button class=\"btn\" onClick=\"pauseTimer()\">Pause</button>\r\n        <button class=\"btn\" onClick=\"resetTimer()\">Reset</button>\r\n      </div>\r\n      <div class=\"no-grow\">\r\n        <button class=\"btn btn-light rounded\">\r\n          <i class=\"bi bi-clipboard\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"TimerComponent\",\r\n  data() {\r\n    return {\r\n      time: 0,\r\n      incrementTimer: {},\r\n      isRunning: false,\r\n    }\r\n  },\r\n  methods: {\r\n    startTimer() {\r\n      this.incrementTimer = setInterval(function() {\r\n        this.time = this.time + 1;\r\n        this.$refs[\"timer\"].textContent = String(Math.floor(this.time / 60)).padStart(2, \"0\") + \":\" + String(this.time % 60).padStart(2, \"0\");\r\n      }, 1000);\r\n    },\r\n    pauseTimer() {\r\n      this.isRunning = false;\r\n      clearInterval(this.incrementTimer);\r\n    },\r\n    resetTimer() {\r\n      this.time = 0;\r\n      this.$refs[\"timer\"].textContent = \"00:00\";\r\n    },\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}